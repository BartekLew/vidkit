#!/bin/bash

do_math() {
    echo "scale=2;$@" | bc
}

if [[ $# != 1 ]]; then
    cat $0
    exit 1
fi

get_stop_time() {
    return_var=$1
    shift

    approx=$( mplayer $@ 2> /dev/null \
                | grep 'A:' \
                | sed 's/.*A:\s*//' \
                | sed 's/\s*V:.*//' \
                | tail -n1 \
    )
    framing_start=$(do_math $approx-1)
    vidls $1 4 "$framing_start" 2
    
    echo "Please enter a time when you want for cut: "
    read $return_var
}

movie=$1
eval $(vidcode $movie-.*)
if [[ -z "$start" ]]; then
    start_pos=0
else
    start_pos=$(do_math $start+$duration)
fi

get_stop_time 'take_start' $movie -ss $start_pos
get_stop_time 'take_stop' $movie -ss $take_start
take_stop=$(do_math $take_stop-$take_start)
mplayer $movie -ss "$take_start" -endpos "$take_stop"

last_takeno=$( \
    grep ":$movie" .vidkit-cuts \
        | sed "s/:$movie-//" \
        | sort | tail -n1
)
takeno=$((last_takeno+1))

echo ":$movie-$takeno

source=$movie
start=$take_start
duration=$take_stop" >> .vidkit-cuts
